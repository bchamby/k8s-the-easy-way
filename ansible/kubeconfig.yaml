---
- name: generate token
  hosts: localhost
  connection: local
  tasks:
    - shell:
        cmd: |
          BOOTSTRAP_TOKEN=$(head -c 16 /dev/urandom | od -An -t x | tr -d ' ')
          cat > ./kubeconfig/token.csv <<EOF
          ${BOOTSTRAP_TOKEN},kubelet-bootstrap,10001,"system:kubelet-bootstrap"
          EOF

- name: distribute token
  hosts: localhost
  connection: local
  tasks:
    - shell: for host in controller0 controller1 controller2; do gcloud compute scp --zone=us-central1-a ./kubeconfig/token.csv ${host}:~/; done

- name: create bootstrap.kubeconfig file
  hosts: localhost
  connection: local
  tasks:
    - shell:
        cmd: |
          KUBERNETES_PUBLIC_ADDRESS=$(gcloud compute addresses describe k8s-the-easy-way --region us-central1 --format 'value(address)')
          BOOTSTRAP_TOKEN=`cat ./kubeconfig/token.csv | awk -F',' '{print $1}'`
          kubectl config set-cluster kubernetes-the-easy-way --certificate-authority=./tls/ca.pem --embed-certs=true --server=https://${KUBERNETES_PUBLIC_ADDRESS}:6443 --kubeconfig=./kubeconfig/bootstrap.kubeconfig
          kubectl config set-credentials kubelet-bootstrap --token=${BOOTSTRAP_TOKEN} --kubeconfig=./kubeconfig/bootstrap.kubeconfig
          kubectl config set-context default --cluster=kubernetes-the-easy-way --user=kubelet-bootstrap --kubeconfig=./kubeconfig/bootstrap.kubeconfig
          kubectl config use-context default --kubeconfig=./kubeconfig/bootstrap.kubeconfig

- name: create kube-proxy.kubeconfig file
  hosts: localhost
  connection: local
  tasks:
    - shell:
        cmd: |
          KUBERNETES_PUBLIC_ADDRESS=$(gcloud compute addresses describe k8s-the-easy-way --region us-central1 --format 'value(address)')
          kubectl config set-cluster kubernetes-the-easy-way --certificate-authority=./tls/ca.pem --embed-certs=true --server=https://${KUBERNETES_PUBLIC_ADDRESS}:6443 --kubeconfig=./kubeconfig/kube-proxy.kubeconfig
          kubectl config set-credentials kube-proxy --client-certificate=./tls/kube-proxy.pem --client-key=./tls/kube-proxy-key.pem --embed-certs=true --kubeconfig=./kubeconfig/kube-proxy.kubeconfig
          kubectl config set-context default --cluster=kubernetes-the-easy-way --user=kube-proxy --kubeconfig=./kubeconfig/kube-proxy.kubeconfig
          kubectl config use-context default --kubeconfig=./kubeconfig/kube-proxy.kubeconfig

- name: distribute kubeconfig files
  hosts: localhost
  connection: local
  tasks:
    - shell: for i in worker0 worker1 worker2; do gcloud compute scp --zone=us-central1-a ./kubeconfig/bootstrap.kubeconfig ./kubeconfig/kube-proxy.kubeconfig ${i}:~/; done
