---
- name: Create Controller and Worker certs
  hosts: localhost
  connection: local
  tasks:
    - name: Check whether certs already exist
      stat:
        path: roles/workstation/files/certs/ca.pem
      register: cert_result
    - include: roles/workstation/tasks/create-certs.yaml
      when: cert_result.stat.exists == False

- name: Distribute controller certs
  hosts: tag_controller
  connection: ssh
  tasks:
    - name: Check whether certs already exist
      stat:
        path: roles/workstation/files/certs/ca.pem
      register: cert_result
    - include: roles/controller/tasks/dist-controller-certs.yaml
      when: cert_result.stat.exists == False

- name: Distribute worker certs
  hosts: tag_worker
  connection: ssh
  tasks:
    - name: Check whether certs already exist
      stat:
        path: roles/workstation/files/certs/ca.pem
      register: cert_result
    - include: roles/worker/tasks/dist-worker-certs.yaml
      when: cert_result.stat.exists == False

- name: Create kubeconfig files
  hosts: localhost
  connection: local
  tasks:
    - name: Check whether kubeconfig files already exist
      stat:
        path: roles/workstation/files/kubeconfig/bootstrap.kubeconfig
      register: kubeconfig_result
    - include: roles/workstation/tasks/kubeconfig.yaml
      when: kubeconfig_result.stat.exists == False
      # Comment

- name: Distribute token to controllers
  hosts: tag_controller
  tasks:
    - name: Check whether kubeconfig files already exist
      stat:
        path: roles/workstation/files/kubeconfig/bootstrap.kubeconfig
      register: kubeconfig_result
    - include: roles/controller/tasks/dist-token.yaml
      when: kubeconfig_result.stat.exists == False

- name: Distribute kubeconfig files
  hosts: tag_worker
  connection: ssh
  tasks:
    - name: Check whether kubeconfig files already exist
      stat:
        path: roles/workstation/files/kubeconfig/bootstrap.kubeconfig
      register: kubeconfig_result
    - include: roles/worker/tasks/dist-kubeconfig-files.yaml
      when: kubeconfig_result.stat.exists == False

# - name: install and configure etcd on controllers
#   hosts: tag_controller
#   connection: ssh
#   tasks:
#     - script: roles/controller/files/etcd.sh
#
# - name: install and configure control plane
#   hosts: tag_controller
#   connection: ssh
#   tasks:
#     - script: roles/controller/files/controller.sh
#
# - name: enable TLS bootstrapping
#   hosts: controller0
#   connection: ssh
#   tasks:
#     - include: roles/workstation/tasks/enable_bootstrap.yaml
#
# - name: install components on workers
#   hosts: tag_worker
#   connection: ssh
#   tasks:
#     - script: roles/worker/files/worker.sh
#
# - name: approve cert requests
#   hosts: controller0
#   connection: ssh
#   tasks:
#     - include: roles/workstation/tasks/approve-certs.yaml
#
# - name: setup kubectl locally
#   hosts: localhost
#   connection: local
#   tasks:
#     - include: roles/workstation/tasks/kubectl.yaml
